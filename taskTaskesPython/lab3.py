
"""
Описание задания

Предположим, у вас есть шоколадная плитка размером n × m, где n и m — целые числа (например, 3 × 5). Ваша цель — разломать шоколадку на отдельные квадратики размером 1 × 1. Вы можете ломать шоколадку только прямыми линиями вдоль линий сетки (параллельно сторонам).

Задание
Написать программу на Python, которая определит минимальное количество разломов, необходимых для разбивания шоколадки на отдельные квадратики 1 х 1.

Пример
Для шоколадки размером 2 × 2 минимальное количество разломов равно 3 (либо 2 горизонтальных и 1 вертикальный, либо 2 вертикальных и 1 горизонтальный).

Подсказки

Если n == 1 и m == 1, то разломов не требуется, поскольку уже имеем квадратик 1 × 1.
Если одна из сторон равна 1, то количество разломов равно длине другой стороны минус один (так как каждый разлом уменьшает одну сторону до единицы).
В общем случае вы должны выбрать, где разломать пополам: либо по вертикали, либо по горизонтали — и использовать рекурсию для обеих частей.
Дополнительное задание (необязательное для выполнения): оптимизировать функцию, используя мемоизацию (кеширование результатов промежуточных вычислений) для уменьшения количества вызовов функции.

Выполненное задание разместите на GitHub или аналогах.

"""


def min_breaks(n, m):
    if n == 1 and m == 1:
        return 0
    if n == 1:
        return m - 1
    if m == 1:
        return n - 1
    # Разламываем по горизонтали (получаем две шоколадки: k × m и (n - k) × m)
    # Или по вертикали (n × k и n × (m - k))
    # Оптимально разломать пополам, чтобы уменьшить сложность
    return 1 + min_breaks(n // 2, m) + min_breaks(n - n // 2, m)
    # Или можно разламывать по вертикали:
    # return 1 + min_breaks(n, m // 2) + min_breaks(n, m - m // 2)

print(f"Количество разломов: {min_breaks(2,2)}")
